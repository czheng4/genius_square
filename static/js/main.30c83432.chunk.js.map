{"version":3,"sources":["components/const.js","components/shapes/helper.js","components/shapes/yellow-shape.js","components/shapes/red-shape.js","components/shapes/orange-shape.js","components/shapes/lightblue-shape.js","components/shapes/purple-shape.js","components/shapes/green-shape.js","components/shapes/earth-shape.js","components/shapes/blue-shape.js","components/shapes/grey-shape.js","components/board.js","App.js","index.js"],"names":["size","x","y","DeepCopy","a","map","e","Square","opacity","fill","points","stroke","strokeWidth","closed","width","height","shadowBlur","shadowOpacity","shadowColor","RotateIcons","onRotate","arrow_x","Math","cos","PI","arrow_y","sin","radius","onClick","onTap","lineJoin","angle","rotation","innerRadius","outerRadius","Shape","props","new_rotation","state","takens","length","setState","taken","drag","offset_x","offset_y","num_move","this","rel_x","rel_y","draggable","onMouseEnter","target","getStage","container","style","cursor","onMouseLeave","onDragStart","getAbsolutePosition","onShapeMoveStart","id","move_x","onDragMove","onShapeMove","onDragEnd","onShapeDown","onMouseDown","onMouseUp","rows","i","ele","j","Component","YellowShape","RedShape","OrangeShape","LightblueShape","PurpleShape","GreenShape","EarthShape","BlockPiece","Const","radiusX","radiusY","Board","abs","shape_abs_positions","shape_taken","pos_row","pos_col","shape_positions","round","setAbsolutePosition","success","px","py","ppos_col","ppos_row","in_board","block_pieces","win","onWin","random_game","push","num_block_pieces","row_i","floor","random","col_i","App","onNewGame","num_game","className","fontSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30c83432.chunk.js","sourcesContent":["export const size = 60;\nexport const shape_size = size - 3;\nexport const x = 50;\nexport const y = 80;\n","import { Rect, Line, Arc } from \"react-konva\";\nimport * as Const from \"../const\";\nimport { Group } from \"react-konva\";\nimport React, { Component } from \"react\";\n\nconst size = Const.shape_size;\nconst padding = 7;\nconst strokeWidth = 0.5;\n\nexport const DeepCopy = (a) => {\n  const new_a = a.map((e) => {\n    return [...e];\n  });\n  return new_a;\n};\n\nexport const Square = ({ x, y, opacity, fill }) => {\n  var points = [x + size, y];\n  points = [\n    ...points,\n    x + size + padding,\n    y + padding,\n    x + size + padding,\n    y + padding + size,\n    x + padding,\n    y + size + padding,\n    x,\n    y + size,\n    x + size,\n    y + size,\n  ];\n  return (\n    <>\n      <Line points={points} stroke={fill} strokeWidth={0.1} opacity={0.4 * opacity} fill={fill} closed={true} />\n      <Rect x={x} y={y} width={size} height={size} stroke=\"black\" strokeWidth={strokeWidth} opacity={0.5 * opacity} />\n      <Rect x={x} y={y} width={size} height={size} fill={fill} shadowBlur={1} shadowOpacity={0.5 * opacity} shadowColor={\"red\"} opacity={opacity} />\n    </>\n  );\n};\n\nexport const RotateIcons = ({ x, y, onRotate }) => {\n  const radius = 8;\n  const arrow_x = x + radius * Math.cos((Math.PI / 180) * 30);\n  const arrow_y = y - radius * Math.sin((Math.PI / 180) * 30);\n  return (\n    <>\n      <Rect x={x - radius - 7} y={y - radius - 7} width={radius * 2 + 14} height={radius * 2 + 14} onClick={onRotate} onTap={onRotate} />\n      <Line points={[arrow_x, arrow_y - 7, arrow_x, arrow_y, arrow_x - 7, arrow_y]} stroke=\"black\" lineJoin=\"round\" />\n      <Arc x={x} y={y} angle={310} rotation={25} innerRadius={radius} outerRadius={radius + 0.5} stroke=\"black\" strokeWidth={1} />\n    </>\n  );\n};\n\nexport class Shape extends Component {\n  constructor(props) {\n    super(props);\n\n    this.takens = props.takens;\n    this.state = {\n      opacity: 1,\n      rotation: 0,\n      drag: false,\n      taken: DeepCopy(this.takens[0]),\n    };\n\n    this.x = props.x;\n    this.y = props.y;\n    this.offset_x = props.x;\n    this.offset_y = props.y;\n    this.fill = props.fill;\n    this.num_move = 0;\n  }\n\n  onRotate = () => {\n    const new_rotation = (this.state.rotation + 1) % this.takens.length;\n    this.setState({ rotation: new_rotation, taken: DeepCopy(this.takens[new_rotation]) });\n  };\n\n  render() {\n    const x = this.props.x;\n    const y = this.props.y;\n    const rel_x = this.x;\n    const rel_y = this.y;\n    return (\n      <>\n        <Group\n          draggable={true}\n          onMouseEnter={(e) => {\n            const container = e.target.getStage().container();\n            container.style.cursor = \"pointer\";\n          }}\n          onMouseLeave={(e) => {\n            const container = e.target.getStage().container();\n            container.style.cursor = \"default\";\n          }}\n          onDragStart={(e) => {\n            this.x = e.target.getAbsolutePosition().x + this.offset_x;\n            this.y = e.target.getAbsolutePosition().y + this.offset_y;\n            this.props.onShapeMoveStart(e, this.props.id);\n            this.setState({ opacity: 0.7, drag: true, move_x: 100 });\n          }}\n          onDragMove={(e) => {\n            this.props.onShapeMove(e, this.props.id, this.state.taken);\n          }}\n          onDragEnd={(e) => {\n            this.x = e.target.getAbsolutePosition().x + this.offset_x;\n            this.y = e.target.getAbsolutePosition().y + this.offset_y;\n            this.props.onShapeDown(e, this.props.id, this.state.taken);\n            this.setState({ opacity: 1, drag: false });\n          }}\n          onMouseDown={(e) => {\n            this.setState({ opacity: 0.7 });\n          }}\n          onMouseUp={(e) => {\n            this.setState({ opacity: 1 });\n          }}\n        >\n          {this.state.taken.map((rows, i) => {\n            return rows.map((ele, j) => {\n              if (ele) return <Square x={x + size * j} y={y + size * i} opacity={this.state.opacity} fill={this.fill} key={`block ${i} ${j}`} />;\n              else return null;\n            });\n          })}\n          {this.props.rotation && this.takens.length !== 1 && (\n            <RotateIcons x={x + size * this.state.taken[0].length + 20} y={y} opacity={this.state.opacity} onRotate={this.onRotate} />\n          )}\n        </Group>\n\n        {this.state.drag &&\n          this.state.taken.map((rows, i) => {\n            return rows.map((ele, j) => {\n              if (ele)\n                return (\n                  <Square x={rel_x + size * j} y={rel_y + size * i} opacity={this.state.opacity} fill={this.fill} key={`original-block ${i} ${j}`} />\n                );\n              else return null;\n            });\n          })}\n      </>\n    );\n  }\n}\n","import { Shape } from \"./helper\";\nimport React from \"react\";\n\nexport const YellowShape = (props) => {\n  const taken0 = [\n    [false, true, false],\n    [true, true, true],\n  ];\n  const taken1 = [\n    [true, false],\n    [true, true],\n    [true, false],\n  ];\n  const taken2 = [\n    [true, true, true],\n    [false, true, false],\n  ];\n  const taken3 = [\n    [false, true],\n    [true, true],\n    [false, true],\n  ];\n  const takens = [taken0, taken1, taken2, taken3];\n  return <Shape {...props} takens={takens} fill=\"#DEC20B\" />;\n};\nexport default YellowShape;\n","import { Shape } from \"./helper\";\nimport React from \"react\";\n\nexport const RedShape = (props) => {\n  const taken0 = [\n    [true, false],\n    [true, true],\n    [false, true],\n  ];\n  const taken1 = [\n    [false, true, true],\n    [true, true, false],\n  ];\n  const taken2 = [\n    [false, true],\n    [true, true],\n    [true, false],\n  ];\n  const taken3 = [\n    [true, true, false],\n    [false, true, true],\n  ];\n  const takens = [taken0, taken1, taken2, taken3];\n  return <Shape {...props} takens={takens} fill={\"red\"} />;\n};\nexport default RedShape;\n","import { Shape } from \"./helper\";\nimport React from \"react\";\n\nexport const OrangeShape = (props) => {\n  const taken0 = [[true, true, true]];\n  const taken1 = [[true], [true], [true]];\n\n  const takens = [taken0, taken1];\n  return <Shape {...props} takens={takens} fill=\"orange\" />;\n};\nexport default OrangeShape;\n","import { Shape } from \"./helper\";\nimport React from \"react\";\n\nexport const LightblueShape = (props) => {\n  const taken0 = [\n    [true, true],\n    [true, false],\n    [true, false],\n  ];\n\n  const taken1 = [\n    [true, true],\n    [false, true],\n    [false, true],\n  ];\n\n  const taken2 = [\n    [false, false, true],\n    [true, true, true],\n  ];\n\n  const taken3 = [\n    [true, false, false],\n    [true, true, true],\n  ];\n\n  const taken4 = [\n    [false, true],\n    [false, true],\n    [true, true],\n  ];\n\n  const taken5 = [\n    [true, false],\n    [true, false],\n    [true, true],\n  ];\n\n  const taken6 = [\n    [true, true, true],\n    [true, false, false],\n  ];\n\n  const taken7 = [\n    [true, true, true],\n    [false, false, true],\n  ];\n\n  const takens = [taken0, taken1, taken2, taken3, taken4, taken5, taken6, taken7];\n  return <Shape {...props} takens={takens} fill=\"lightblue\" />;\n};\nexport default LightblueShape;\n","import { Shape } from \"./helper\";\nimport React from \"react\";\n\nexport const PurpleShape = (props) => {\n  const taken0 = [\n    [true, false],\n    [true, true],\n  ];\n  const taken1 = [\n    [false, true],\n    [true, true],\n  ];\n  const taken2 = [\n    [true, true],\n    [true, false],\n  ];\n  const taken3 = [\n    [true, true],\n    [false, true],\n  ];\n  const takens = [taken0, taken1, taken2, taken3];\n  return <Shape {...props} takens={takens} fill=\"#9370DB\" />;\n};\nexport default PurpleShape;\n","import { Shape } from \"./helper\";\nimport React from \"react\";\n\nexport const GreenShape = (props) => {\n  const taken0 = [\n    [true, true],\n    [true, true],\n  ];\n\n  const takens = [taken0];\n  return <Shape {...props} takens={takens} fill=\"green\" />;\n};\nexport default GreenShape;\n","import { Shape } from \"./helper\";\nimport React from \"react\";\n\nexport const EarthShape = (props) => {\n  const taken0 = [[true, true]];\n  const taken1 = [[true], [true]];\n\n  const takens = [taken0, taken1];\n  return <Shape {...props} takens={takens} fill=\"#a66b1f\" />;\n};\nexport default EarthShape;\n","import { Shape } from \"./helper\";\nimport React from \"react\";\n\nexport const RedShape = (props) => {\n  const taken0 = [[true]];\n\n  const takens = [taken0];\n  return <Shape {...props} takens={takens} fill=\"#1E90FF\" />;\n};\nexport default RedShape;\n","import { Shape } from \"./helper\";\nimport React from \"react\";\n\nexport const RedShape = (props) => {\n  const taken0 = [[true, true, true, true]];\n  const taken1 = [[true], [true], [true], [true]];\n\n  const takens = [taken0, taken1];\n  return <Shape {...props} takens={takens} fill=\"grey\" />;\n};\nexport default RedShape;\n","import { Component } from \"react\";\nimport { Rect, Ellipse } from \"react-konva\";\nimport { YellowShape, RedShape, OrangeShape, PurpleShape, LightblueShape, GreenShape, EarthShape, BlueShape, GreyShape } from \"./shapes/shapes\";\nimport * as Const from \"./const\";\n\n/** Drawing the block piece */\nconst BlockPiece = ({ i, j }) => {\n  return (\n    <>\n      <Ellipse\n        x={Const.x + j * Const.size + Const.size / 2}\n        y={Const.y + i * Const.size + Const.size / 2 - 2.5}\n        radiusX={Const.size / 2.5}\n        radiusY={Const.size / 3.5}\n        fill=\"grey\"\n      />\n      <Ellipse\n        x={Const.x + j * Const.size + Const.size / 2}\n        y={Const.y + i * Const.size + Const.size / 2 + 2.5}\n        radiusX={Const.size / 2.5}\n        radiusY={Const.size / 3.5}\n        fill=\"grey\"\n        opacity={0.5}\n        strokeWidth={0}\n        stroke=\"white\"\n      />\n    </>\n  );\n};\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      block_pieces: [],\n      taken: [\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n      ],\n      fill: [\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n        [false, false, false, false, false, false],\n      ],\n      rotation: [true, true, true, true, true, true, true, true, true],\n    };\n    this.shape_positions = [\n      [450, 30],\n      [670, 30],\n      [890, 30],\n      [450, 230],\n      [670, 230],\n      [890, 230],\n      [450, 430],\n      [670, 430],\n      [890, 430],\n    ];\n    this.shape_abs_positions = [\n      [0, 0],\n      [0, 0],\n      [0, 0],\n      [0, 0],\n      [0, 0],\n      [0, 0],\n      [0, 0],\n      [0, 0],\n      [0, 0],\n    ];\n  }\n\n  onShapeMoveStart = (e, id) => {\n    const abs = e.target.getAbsolutePosition();\n    this.shape_abs_positions[id][0] = abs.x;\n    this.shape_abs_positions[id][1] = abs.y;\n  };\n\n  onShapeMove = (e, id, shape_taken) => {\n    const fill = this.state.fill;\n    const abs = e.target.getAbsolutePosition();\n    const x = this.shape_positions[id][0] + abs.x; // relative x\n    const y = this.shape_positions[id][1] + abs.y; // relateiv y\n    var pos_row, pos_col;\n\n    for (let i = 0; i < fill.length; i++) {\n      for (let j = 0; j < fill[i].length; j++) fill[i][j] = false;\n    }\n    pos_col = Math.round((x - Const.x) / Const.size);\n    pos_row = Math.round((y - Const.y) / Const.size);\n\n    for (let i = 0; i < shape_taken.length; i++) {\n      for (let j = 0; j < shape_taken[i].length; j++) {\n        if (pos_row + i >= 0 && pos_row + i < 6 && pos_col + j >= 0 && pos_col + j < 6 && shape_taken[i][j]) {\n          fill[pos_row + i][pos_col + j] = true;\n        }\n      }\n    }\n    if (pos_row >= 0 && pos_row < 6 && pos_col >= 0 && pos_col < 6) {\n      e.target.setAbsolutePosition({ x: abs.x + pos_col * Const.size + Const.x - x, y: abs.y + pos_row * Const.size + Const.y - y });\n    }\n    this.setState({ fill: fill });\n  };\n\n  onShapeDown = (e, id, shape_taken) => {\n    const taken = this.state.taken;\n    const rotation = this.state.rotation;\n    const abs = e.target.getAbsolutePosition();\n    const x = this.shape_positions[id][0] + abs.x; // relative x\n    const y = this.shape_positions[id][1] + abs.y; // relateiv y\n    const pos_col = Math.round((x - Const.x) / Const.size);\n    const pos_row = Math.round((y - Const.y) / Const.size);\n    var success = true;\n\n    // free previous taken spot\n    const px = this.shape_positions[id][0] + this.shape_abs_positions[id][0];\n    const py = this.shape_positions[id][1] + this.shape_abs_positions[id][1];\n    const ppos_col = Math.round((px - Const.x) / Const.size);\n    const ppos_row = Math.round((py - Const.y) / Const.size);\n    var in_board = true;\n    for (let i = 0; i < shape_taken.length; i++) {\n      for (let j = 0; j < shape_taken[i].length; j++) {\n        if (ppos_row + i >= 0 && ppos_row + i < 6 && ppos_col + j >= 0 && ppos_col + j < 6) {\n        } else {\n          in_board = false;\n          break;\n        }\n      }\n    }\n    if (in_board) {\n      for (let i = 0; i < shape_taken.length; i++) {\n        for (let j = 0; j < shape_taken[i].length; j++) {\n          if (!this.state.block_pieces[ppos_row + i][ppos_col + j]) taken[ppos_row + i][ppos_col + j] = false;\n        }\n      }\n    }\n    if (pos_row >= 6 || pos_col >= 6) {\n      rotation[id] = true;\n      this.setState({ taken: taken, rotation: rotation });\n      return;\n    }\n\n    // put it down\n    for (let i = 0; i < shape_taken.length; i++) {\n      for (let j = 0; j < shape_taken[i].length; j++) {\n        if (\n          pos_row + i >= 0 &&\n          pos_row + i < 6 &&\n          pos_col + j >= 0 &&\n          pos_col + j < 6 &&\n          (shape_taken[i][j] === false || (taken[pos_row + i][pos_col + j] === false && shape_taken[i][j] === true))\n        ) {\n        } else {\n          success = false;\n          break;\n        }\n      }\n    }\n\n    if (!success) e.target.setAbsolutePosition({ x: this.shape_abs_positions[id][0], y: this.shape_abs_positions[id][1] });\n    else {\n      rotation[id] = false;\n      for (let i = 0; i < shape_taken.length; i++) {\n        for (let j = 0; j < shape_taken[i].length; j++) {\n          if (shape_taken[i][j]) taken[pos_row + i][pos_col + j] = true;\n        }\n      }\n\n      var win = true;\n      for (let i = 0; i < taken.length; i++) {\n        for (let j = 0; j < taken[i].length; j++) {\n          if (!taken[i][j]) {\n            win = false;\n            break;\n          }\n        }\n      }\n      if (win) this.props.onWin();\n    }\n    this.setState({ taken: taken, rotation: rotation });\n  };\n\n  componentDidMount() {\n    this.random_game();\n  }\n  random_game = () => {\n    const taken = this.state.taken;\n    const block_pieces = [];\n    for (let i = 0; i < taken.length; i++) {\n      for (let j = 0; j < taken[i].length; j++) taken[i][j] = false;\n      block_pieces.push([...taken[i]]);\n    }\n\n    var num_block_pieces = 0;\n    while (num_block_pieces < 7) {\n      let row_i = Math.floor(Math.random() * 6);\n      let col_i = Math.floor(Math.random() * 6);\n      if (taken[row_i][col_i] === false) {\n        taken[row_i][col_i] = true;\n        block_pieces[row_i][col_i] = true;\n        num_block_pieces++;\n      }\n    }\n    this.setState({ block_pieces: block_pieces, taken: taken });\n  };\n  render() {\n    return (\n      <>\n        <Rect x={Const.x} y={Const.y} width={Const.size * 6} height={Const.size * 6} stroke={\"grey\"} strokeWidth={10} />\n        {/* <BlockPiece i={3} j={4} /> */}\n        {this.state.taken.map((rows, i) => {\n          return rows.map((ele, j) => {\n            return (\n              <Rect\n                x={Const.x + j * Const.size}\n                y={Const.y + i * Const.size}\n                width={Const.size}\n                height={Const.size}\n                stroke=\"grey\"\n                strokeWidth={1.2}\n                key={`${i} ${j}`}\n                fill={this.state.fill[i][j] ? \"#DCDCDC\" : \"white\"}\n              />\n            );\n          });\n        })}\n\n        {this.state.block_pieces.map((rows, i) => {\n          return rows.map((ele, j) => {\n            if (ele) {\n              return <BlockPiece i={i} j={j} key={`block piece ${i} ${j}`} />;\n            } else {\n              return null;\n            }\n          });\n        })}\n        <YellowShape\n          x={this.shape_positions[0][0]}\n          y={this.shape_positions[0][1]}\n          onShapeMove={this.onShapeMove}\n          onShapeDown={this.onShapeDown}\n          onShapeMoveStart={this.onShapeMoveStart}\n          id={0}\n          rotation={this.state.rotation[0]}\n        />\n        <RedShape\n          x={this.shape_positions[1][0]}\n          y={this.shape_positions[1][1]}\n          onShapeMove={this.onShapeMove}\n          onShapeDown={this.onShapeDown}\n          onShapeMoveStart={this.onShapeMoveStart}\n          id={1}\n          rotation={this.state.rotation[1]}\n        />\n        <OrangeShape\n          x={this.shape_positions[2][0]}\n          y={this.shape_positions[2][1]}\n          onShapeMove={this.onShapeMove}\n          onShapeDown={this.onShapeDown}\n          onShapeMoveStart={this.onShapeMoveStart}\n          id={2}\n          rotation={this.state.rotation[2]}\n        />\n        <LightblueShape\n          x={this.shape_positions[3][0]}\n          y={this.shape_positions[3][1]}\n          onShapeMove={this.onShapeMove}\n          onShapeDown={this.onShapeDown}\n          onShapeMoveStart={this.onShapeMoveStart}\n          id={3}\n          rotation={this.state.rotation[3]}\n        />\n        <PurpleShape\n          x={this.shape_positions[4][0]}\n          y={this.shape_positions[4][1]}\n          onShapeMove={this.onShapeMove}\n          onShapeDown={this.onShapeDown}\n          onShapeMoveStart={this.onShapeMoveStart}\n          id={4}\n          rotation={this.state.rotation[4]}\n        />\n\n        <GreenShape\n          x={this.shape_positions[5][0]}\n          y={this.shape_positions[5][1]}\n          onShapeMove={this.onShapeMove}\n          onShapeDown={this.onShapeDown}\n          onShapeMoveStart={this.onShapeMoveStart}\n          id={5}\n          rotation={this.state.rotation[5]}\n        />\n\n        <EarthShape\n          x={this.shape_positions[6][0]}\n          y={this.shape_positions[6][1]}\n          onShapeMove={this.onShapeMove}\n          onShapeDown={this.onShapeDown}\n          onShapeMoveStart={this.onShapeMoveStart}\n          id={6}\n          rotation={this.state.rotation[6]}\n        />\n\n        <BlueShape\n          x={this.shape_positions[7][0]}\n          y={this.shape_positions[7][1]}\n          onShapeMove={this.onShapeMove}\n          onShapeDown={this.onShapeDown}\n          onShapeMoveStart={this.onShapeMoveStart}\n          rotation={this.state.rotation[7]}\n          id={7}\n        />\n\n        <GreyShape\n          x={this.shape_positions[8][0]}\n          y={this.shape_positions[8][1]}\n          onShapeMove={this.onShapeMove}\n          onShapeDown={this.onShapeDown}\n          onShapeMoveStart={this.onShapeMoveStart}\n          rotation={this.state.rotation[8]}\n          id={8}\n        />\n      </>\n    );\n  }\n}\n\nexport default Board;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport { Component } from \"react\";\nimport { Stage, Layer } from \"react-konva\";\nimport Board from \"./components/board\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { num_game: 0, win: false };\n  }\n  onNewGame = () => {\n    this.setState({ num_game: this.state.num_game + 1, win: false });\n  };\n\n  onWin = () => {\n    this.setState({ win: true });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"ml-5 mt-2 mb-0\">\n          <h2>Genius Square Game</h2>\n          <p>Please move the blocks to fill out the 6x6 grid. You can change the block's shape by clicking rotation icons</p>\n          <button className=\"btn btn-primary\" onClick={this.onNewGame}>\n            Start a new game\n          </button>\n\n          {this.state.win && (\n            <span className=\"ml-5 text-primary\" style={{ fontSize: \"20px\" }}>\n              Congratulations! You beat me\n            </span>\n          )}\n        </div>\n        <Stage width={1200} height={700}>\n          <Layer>\n            <Board key={this.state.num_game} onWin={this.onWin} />\n          </Layer>\n        </Stage>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}